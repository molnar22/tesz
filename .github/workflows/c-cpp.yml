name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: build
      run: gcc main.c
    - name: Install Build Wrapper
      uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v4
    - name: Run Build Wrapper
      run: |
       build-wrapper-linux-x86-64 --out-dir . gcc main.c
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v4
      env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
       args: >
         --define sonar.cfamily.compile-commands="./compile_commands.json"
    - uses: cpp-linter/cpp-linter-action@v2
      id: linter
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        style: 'file'  # Use .clang-format config file
        tidy-checks: '' # Use .clang-tidy config file
        # only 'update' a single comment in a pull request thread.
        thread-comments: ${{ github.event_name == 'pull_request' && 'update' }}
    - name: Fail fast?!
      if: steps.linter.outputs.checks-failed > 0
      run: exit 1
# No c support
#    - name: Run PMD
#      run: |
#         cd .
#         wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F7.9.0/pmd-dist-7.9.0-bin.zip
#         unzip pmd-dist-7.9.0-bin.zip
#         ls ./pmd-bin-7.9.0/bin
#         alias pmd="./pmd-bin-7.9.0/bin/pmd"
#         ./pmd-bin-7.9.0/bin/pmd check -d /usr/src -R rulesets/java/quickstart.xml -f text
#      shell: bash
# Configuration problem
#    - name: Run oclint
#      run: |
#         cd .
#         wget https://github.com/oclint/oclint/releases/download/v24.11/oclint-24.11-llvm-16.0.4-x86_64-linux-ubuntu-24.04.tar.gz
#         ls
#         tar -xvf ./oclint-24.11-llvm-16.0.4-x86_64-linux-ubuntu-24.04.tar.gz
#         ls
#         ls ./oclint-24.11/bin
#         chmod +x ./oclint-24.11/bin/oclint
#         # ldconfig /home/runner/work/tesz/tesz/./oclint-24.11/lib/oclint/rules/libUnusedLocalVariableRule.so
#         # sudo ldconfig /home/runner/work/tesz/tesz/./oclint-24.11/lib/
#         # sudo ldconfig /home/runner/work/tesz/tesz/./oclint-24.11/lib/oclint/
#         # sudo ldconfig /home/runner/work/tesz/tesz/./oclint-24.11/lib/oclint/rules/
#         #./oclint-24.11/bin/oclint main.c -- -c
#         sudo cp ./oclint-24.11/bin/oclint* /usr/local/bin/
#         sudo cp -rp ./oclint-24.11/lib/* /usr/local/lib/
#         # sudo cp -rp ./oclint-24.11/include/* /usr/local/include/
#         sudo ldconfig /oclint-24.11/lib/
#         oclint main.c -- -c
#      shell: bash
# This install-description does not work
#    - name: Run clang-tidy
#      run: |
#         sudo add-apt-repository 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main'
#         cat /etc/apt/sources.list
#         wget https://apt.llvm.org/llvm-snapshot.gpg.key
#         sudo apt-key add llvm-snapshot.gpg.key
#         sudo apt update
#         sudo apt install clang-format-13
#         sudo apt install clang-tidy-13
#      shell: bash
    - name: Run clang-tidy
      run: |
         sudo pip install clang-tidy
         pip install clang-tidy
         ls
         # clang-tidy -checks=-*,clang-analyzer-*,-clang-analyzer-cplusplus* main.c --
         clang-tidy --header-filter=* ./main.c
      shell: bash
      
